@model SkautSIS.PersonGroups.ViewModels.PersonGroupEditViewModel
@using SkautSIS.PersonGroups.Models;
@using SkautSIS.PersonGroups.Extensions;

@{ Layout.Title = T("Update Person Group").ToString(); }

@{ var personIndex = 0; }

<div class="actions"><a class="add button primaryAction" href="@Url.PersonGroupList()">@T("Back To List")</a></div>
@using (Html.BeginFormAntiForgeryPost())
{
    Html.ValidationSummary();
    <fieldset>
        <input type="hidden" value="@Model.PersonGroupId" name="@Html.NameOf(m => m.PersonGroupId)"/>
        <legend>@T("Information")</legend>
        @Html.LabelFor(m => m.DisplayName, T("Name"))
        @Html.TextBoxFor(m => m.DisplayName, new { @class = "textMedium" })
        @Html.ValidationMessageFor(m => m.DisplayName, "*")
    </fieldset>
    <fieldset>
        <legend>@T("Persons")</legend>
        <ul>
        @foreach (var entry in Model.Persons)
        {
             <li>
                <input type="hidden" value="@entry.Person.SkautIsPersonId" name="@Html.FieldNameFor(m => m.Persons[personIndex].Person.SkautIsPersonId)"/>
                <label for="@Html.FieldNameFor(m => m.Persons[personIndex].IsChecked)">
                    <input type="checkbox" value="true" name="@Html.FieldNameFor(m => m.Persons[personIndex].IsChecked)" id="@Html.FieldNameFor(m => m.Persons[personIndex].IsChecked)"
                        @if (entry.IsChecked)
                        {<text>checked="checked"</text>}/>
                        @string.Format("{0} {1} - {2}", entry.Person.FirstName, entry.Person.LastName, entry.Person.NickName)
                </label>
                @{personIndex++;}
            </li>
        }
        </ul>
    </fieldset>
    <fieldset>
        <button class="primaryAction" type="submit">@T("Save")</button>
    </fieldset>
}