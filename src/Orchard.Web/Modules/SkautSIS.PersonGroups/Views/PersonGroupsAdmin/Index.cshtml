@model PersonGroupsIndexViewModel
@using SkautSIS.PersonGroups.Models;
@using SkautSIS.PersonGroups.ViewModels;

@{
    var personGroupIndex = 0;

    Layout.Title = T("Person groups").ToString();
}

@using (Html.BeginFormAntiForgeryPost()) { 
    @Html.ValidationSummary()
    <div class="manage">@Html.ActionLink(T("Add a new person group").ToString(), "Create", new { }, new { @class = "button primaryAction" })</div>

    <fieldset class="bulk-actions">
        <label for="publishActions">@T("Actions:")</label>
        <select id="publishActions" name="@Html.NameOf(m => m.Options.BulkAction)">
            @Html.SelectOption(Model.Options.BulkAction, PersonGroupsBulkAction.None, T("Choose action...").ToString())
            @Html.SelectOption(Model.Options.BulkAction, PersonGroupsBulkAction.Delete, T("Delete").ToString())
        </select>
        <button type="submit" name="submit.BulkEdit" value="@T("Apply")">@T("Apply")</button>
    </fieldset>
    <fieldset class="bulk-actions">
        @Html.TextBoxFor(m => m.Options.Search, new { @class = "text" })        
        <label for="filterResults">@T("Filter:")</label>
        <select id="filterResults" name="@Html.NameOf(m => m.Options.Filter)">
            @Html.SelectOption(Model.Options.Filter, PersonGroupsFilter.All, T("All Person Groups").ToString())
            @Html.SelectOption(Model.Options.Filter, PersonGroupsFilter.Custom, T("Custom  Person Groups").ToString())
            @Html.SelectOption(Model.Options.Filter, PersonGroupsFilter.Unit, T("Unit Person Groups").ToString())
            @Html.SelectOption(Model.Options.Filter, PersonGroupsFilter.Event, T("Event Person Groups").ToString())
        </select>
        <label for="filterResults">@T("Sort by:")</label>
        <select id="filterResults" name="@Html.NameOf(m => m.Options.Order)">
            @Html.SelectOption(Model.Options.Order, PersonGroupsOrder.Title, T("Title").ToString())
            @Html.SelectOption(Model.Options.Order, PersonGroupsOrder.Type, T("Type").ToString())
        </select>

        <button type="submit" name="submit.Filter" value="@T("Filter")">@T("Filter")</button>
    </fieldset>
    <fieldset>
        <table class="items">
            <thead>
                <tr>
                    <th scope="col">&nbsp;&darr;</th>
                    <th scope="col">@T("Title")</th>
                    <th scope="col">@T("Type")</th>
                    <th scope="col">@T("Actions")</th>
                </tr>
            </thead>
            @foreach (var entry in Model.PersonGroups)
            { 
            <tr>
                <td>
                    <input type="hidden" value="@Model.PersonGroups[personGroupIndex].PersonGroup.PersonGroupId" name="@Html.NameOf(m => m.PersonGroups[personGroupIndex].PersonGroup.PersonGroupId)"/>
                    <input type="checkbox" value="true" name="@Html.NameOf(m => m.PersonGroups[personGroupIndex].IsChecked)"/>
                </td>
                <td>
                    @Html.ActionLink(entry.PersonGroup.DisplayName, "Detail", new { id = entry.PersonGroup.PersonGroupId }) 
                </td>
                <td>
                    @{ var type = string.Empty;
                        switch (entry.PersonGroup.Type)
                       {
                           case TypeEnum.Custom:
                               type = T("Custom").ToString();
                               break;
                           case TypeEnum.Unit:
                               type = T("Unit").ToString();
                               break;
                           case TypeEnum.Event:
                               type = T("Event").ToString();
                               break;
                       }
                    }
                    @string.Format("{0}", type)
                <td>
                    @Html.ActionLink(T("Detail").ToString(), "Details", new { id = entry.PersonGroup.PersonGroupId })
                    @if (entry.PersonGroup.Type == TypeEnum.Custom) {
                        <text> | </text> @Html.ActionLink(T("Edit").ToString(), "Edit", new { id = entry.PersonGroup.PersonGroupId }) 
                        <text> | </text> @Html.ActionLink(T("Delete").ToString(), "Delete", new { id = entry.PersonGroup.PersonGroupId }, new { itemprop = "RemoveUrl UnsafeUrl" })
                    }
                </td>
            </tr>
                    personGroupIndex++;
            }
        </table>

    @Display(Model.Pager)

    </fieldset>
} 